plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'io.quarkus:quarkus-container-image-docker'
    implementation 'io.quarkus:quarkus-micrometer'
    implementation 'io.quarkiverse.barcode:quarkus-okapi:1.0.0'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-rest'
    implementation "io.quarkus:quarkus-rest-jackson"
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-junit5-component'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.assertj:assertj-core:3.26.3'
}

group 'com.logistics'
version '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

//configurations {
//    integrationTestCompile.extendsFrom testCompile
//    integrationTestRuntime.extendsFrom testRuntime
//    integrationTestImplementation.extendsFrom testImplementation
//    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
//}
//
//sourceSets {
//    integrationTest {
//        java {
//            compileClasspath += main.output + test.output
//            runtimeClasspath += main.output + test.output
//            srcDir file('src/integrationTest/java')
//        }
//        resources.srcDir file('src/integrationTest/resources')
//    }
//}
//
//tasks.register('integrationTest', Test) {
//    testClassesDirs = sourceSets.integrationTest.output.classesDirs
//    classpath = sourceSets.integrationTest.runtimeClasspath
//}


tasks.named('quarkusIntTest') {
    // Configuraciones adicionales
    classpath += files('src/integrationTest/resources')
    systemProperty 'quarkus.config.locations', 'src/integrationTest/resources/application.properties'
    systemProperty 'quarkus.profile', 'integration'
    // Otras configuraciones que necesites

}
